version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/coderunner:/tmp/coderunner
      - ./backend/coderunner.db:/app/coderunner.db
    depends_on:
      - python-runner
      - node-runner
      - cpp-runner
      - java-runner
      - go-runner
      - rust-runner
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  python-runner:
    build: ./docker/python
    image: coderunner-python
    command: ["sleep", "infinity"]
    profiles: ["build-only"]

  node-runner:
    build: ./docker/node
    image: coderunner-node
    command: ["sleep", "infinity"]
    profiles: ["build-only"]

  cpp-runner:
    build: ./docker/cpp
    image: coderunner-cpp
    command: ["sleep", "infinity"]
    profiles: ["build-only"]

  java-runner:
    build: ./docker/java
    image: coderunner-java
    command: ["sleep", "infinity"]
    profiles: ["build-only"]

  go-runner:
    build: ./docker/go
    image: coderunner-go
    command: ["sleep", "infinity"]
    profiles: ["build-only"]

  rust-runner:
    build: ./docker/rust
    image: coderunner-rust
    command: ["sleep", "infinity"]
    profiles: ["build-only"]

  # Optional: Add monitoring
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup
    restart: unless-stopped
    profiles: ["monitoring"]

networks:
  default:
    driver: bridge